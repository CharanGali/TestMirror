{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "env": {
      "type": "String"
    },
    "location": {
      "type": "String"
    },
    "appCode": {
      "type": "string"
    },
    "subscriptionCode": {
      "type": "string"
    }
  },
  "variables": {
    "targetRgName": "[concat('rg-', parameters('subscriptionCode'), '-', parameters('env'), '-', parameters('appCode'), '-aks')]",
    "aksResourceId": "[
      resourceId(
        variables('targetRgName'),
        'Microsoft.ContainerService/managedClusters',
        concat(
          'aks-',
          parameters('subscriptionCode'),
          '-',
          parameters('env'),
          '-',
          parameters('appCode'),
          '-',
          parameters('location')
        )
      )
    ]",
    "monitorRgName": "[concat('rg-', parameters('subscriptionCode'), '-', parameters('env'), '-', parameters('appCode'), '-monitor')]",
    "tags": {
      "app": "[parameters('appCode')]",
      "type": "monitor",
      "env": "[parameters('env')]"
    },
    "workspaceId": "[
      resourceId(
        variables('monitorRgName'),
        'microsoft.operationalinsights/workspaces',
        concat('log-', parameters('subscriptionCode'), '-', parameters('env'), '-', parameters('appCode'), '-monitor')
      )
    ]",
    "actionGroupId": "[
      resourceId(
        variables('monitorRgName'),
        'microsoft.insights/actionGroups',
        concat('ag-', parameters('subscriptionCode'), '-', parameters('env'), '-logSearch2Opsgenie')
      )
    ]",
    "critAlert": {
      "alertLevel": "crit",
      "severity": 0,
      "query": "ContainerLog\r\n| where parse_json(LogEntry)[0].level == \"crit\"",
      "trigger": {
        "thresholdOperator": "GreaterThan",
        "threshold": 0
      }
    },
    "errorAlert": {
      "alertLevel": "error",
      "severity": 1,
      "query": "ContainerLog\r\n| where parse_json(LogEntry)[0].level == \"error\"",
      "trigger": {
        "thresholdOperator": "GreaterThan",
        "threshold": 0
      }
    },
    "warningAlert": {
      "alertLevel": "warning",
      "severity": 2,
      "query": "ContainerLog\r\n| where parse_json(LogEntry)[0].level == \"warning\"",
      "trigger": {
        "thresholdOperator": "GreaterThan",
        "threshold": 0
      }
    },
    "alerts": "[
      createArray(
        variables('critAlert'),
        variables('errorAlert'),
        variables('warningAlert')
      )
    ]"
  },
  "resources": [
    {
      "copy": {
        "name": "alerts",
        "count": "[length(variables('alerts'))]"
      },
      "type": "microsoft.insights/scheduledqueryrules",
      "apiVersion": "2018-04-16",
      "name": "[
        concat(
          'ar-',
          parameters('subscriptionCode'),
          '-',
          parameters('env'),
          '-logSearch2Opsgenie-',
          parameters('appCode'),
          '-',
          variables('alerts')[copyIndex()].alertLevel
        )
      ]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "enabled": "true",
        "source": {
          "query": "[variables('alerts')[copyIndex()].query]",
          "authorizedResources": [],
          "dataSourceId": "[variables('workspaceId')]",
          "queryType": "ResultCount"
        },
        "schedule": {
          "frequencyInMinutes": 5,
          "timeWindowInMinutes": 5
        },
        "action": {
          "severity": "[variables('alerts')[copyIndex()].severity]",
          "aznsAction": {
            "actionGroup": [
              "[variables('actionGroupId')]"
            ]
          },
          "trigger": "[variables('alerts')[copyIndex()].trigger]",
          "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction"
        }
      }
    }
  ]
}
