name: "001 prepare the AWS-SQL data"

env:
  AZ_CLI_VERSION: 2.30.0
  INPUT_PARAMETER_NAMES_TO_BE_MASKED: '["acm_access_key_id", "acm_secret_access_key"]'

on:
  workflow_dispatch:
    inputs:
      subscription_code:
        description: "SUBSCRIPTION_CODE of resources to be deployed. This value is also used as the github secret env value. (e.g. gcspre, gcsrls):"
        required: true
        default: gcspre
      region_code:
        description: "REGION_CODE of resources to be deployed (e.g. japaneast):"
        required: true
        default: japaneast
      env_name:
        description: "ENV_NAME of resources to be deployed (e.g. prd, sdv, dev):"
        required: true
        default: dev
      app_code:
        description: "APP_CODE of resources to be deployed (usually do not need to change from lacmn):"
        required: true
        default: lacmn
      acm_access_key_id:
        description: "AWS access key ID for ACM:"
        required: false
        default: ""
      acm_secret_access_key:
        description: "AWS secret access key for ACM:"
        required: false
        default: ""

jobs:
  main:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.subscription_code }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Mask secret values
        id: maskSecretValues
        run: |
          bash ./.github/scripts/mask-secret-values.sh

      - name: Firewall IP Settings
        id: addMyIpToKeyVaultNetworkRole
        uses: azure/CLI@v1
        with:
          azcliversion: ${{ env.AZ_CLI_VERSION }}
          inlineScript: |
            SUBSCRIPTION_CODE="${{ github.event.inputs.subscription_code }}"
            REGION_CODE="${{ github.event.inputs.region_code }}"
            ENV_NAME="${{ github.event.inputs.env_name }}"
            APP_CODE="${{ github.event.inputs.app_code }}"
            CMN_KV_RG_NAME="rg-${SUBSCRIPTION_CODE}-${ENV_NAME}-${APP_CODE}-kv"
            KV_RG_NAME="rg-${SUBSCRIPTION_CODE}-${ENV_NAME}-${APP_CODE}-kv"
            MY_IP=$(curl -s https://checkip.amazonaws.com/)
            bash ./.github/scripts/add-ip-to-key-vault-network-rule.sh ${MY_IP} ${SUBSCRIPTION_CODE} ${KV_RG_NAME}
            bash ./.github/scripts/add-ip-to-key-vault-network-rule.sh ${MY_IP} ${SUBSCRIPTION_CODE} ${CMN_KV_RG_NAME}
            echo "::set-output name=MY_IP::${MY_IP}"
            bash ./.github/scripts/add-ip-to-aks-network-rule.sh ${ENV_NAME} ${REGION_CODE} ${SUBSCRIPTION_CODE} ${APP_CODE} ${MY_IP}
            sleep 120;

      - name: STEP 100
        uses: azure/CLI@v1
        with:
          azcliversion: ${{ env.AZ_CLI_VERSION }}
          inlineScript: |
            bash ./saas/azure/deployments/100-add-key-vault-secrets.sh \
              "${{ github.event.inputs.env_name }}" \
              "${{ github.event.inputs.subscription_code }}" \
              "${{ github.event.inputs.app_code }}" \
              "${{ github.event.inputs.acm_access_key_id }}" \
              "${{ github.event.inputs.acm_secret_access_key }}"

      - name: STEP 101
        uses: azure/CLI@v1
        with:
          azcliversion: ${{ env.AZ_CLI_VERSION }}
          inlineScript: |
            bash ./saas/azure/deployments/101-init-lacmn-db.sh \
              "${{ github.event.inputs.env_name }}" \
              "${{ github.event.inputs.region_code }}" \
              "${{ github.event.inputs.subscription_code }}" \
              "${{ github.event.inputs.app_code }}"

      - name: Restore the firewall IP settings
        if: |
          ${{ always() }}
        uses: azure/CLI@v1
        with:
          azcliversion: ${{ env.AZ_CLI_VERSION }}
          inlineScript: |
            SUBSCRIPTION_CODE="${{ github.event.inputs.subscription_code }}"
            REGION_CODE="${{ github.event.inputs.region_code }}"
            ENV_NAME="${{ github.event.inputs.env_name }}"
            APP_CODE="${{ github.event.inputs.app_code }}"
            CMN_KV_RG_NAME="rg-${SUBSCRIPTION_CODE}-${ENV_NAME}-${APP_CODE}-kv"
            KV_RG_NAME="rg-${SUBSCRIPTION_CODE}-${ENV_NAME}-${APP_CODE}-kv"
            MY_IP="${{ steps.addMyIpToKeyVaultNetworkRole.outputs.MY_IP }}"
            bash ./.github/scripts/remove-ip-from-key-vault-network-rule.sh ${MY_IP} ${SUBSCRIPTION_CODE} ${CMN_KV_RG_NAME}
            bash ./.github/scripts/remove-ip-from-key-vault-network-rule.sh ${MY_IP} ${SUBSCRIPTION_CODE} ${KV_RG_NAME}
            bash ./.github/scripts/remove-ip-from-aks-network-rule.sh ${ENV_NAME} ${REGION_CODE} ${SUBSCRIPTION_CODE} ${APP_CODE} ${MY_IP}

      - name: Send Notification to slack
        if: always()
        uses: tokorom/action-slack-incoming-webhook@master
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
            text: "***AWS SQL Data Preparation Completed*** [${{ github.repository }}] @ ${{ github.event_name }} "
            attachments: |
              [
                {
                  "author_name": "${{ github.actor }}",
                  "author_icon": "${{ github.event.sender.avatar_url }}",
                  "fields": [
                    {
                      "title": "GitHub Actions URL",
                      "value": "https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]   