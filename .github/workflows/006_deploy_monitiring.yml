name: "006 deploy monitoring"

env:
  AZ_CLI_VERSION: 2.30.0

on:
  workflow_dispatch:
    inputs:
      subscription_code:
        description: "SUBSCRIPTION_CODE of resources to be deployed. This value is also used as the github secret env value. (e.g. gcspre, gcsrls):"
        required: true
        default: gcspre
      env_name:
        description: "ENV_NAME of resources to be deployed (e.g. cmn, dev, qas, prd):"
        required: true
        default: "dev"
      app_code:
        description: "APP_CODE of resources to be deployed (usually do not need to change from lacmn):"
        required: true
        default: "lacmn"
      location:
        description: '"LOCATION" value of resources to be monitored (e.g. japaneast):'
        required: true
        default: "japaneast"

jobs:
  main:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.subscription_code }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@master
        with:
          fetch-depth: 0 # fetch tags for git describe

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Add My IP To Key Vault Network Role
        id: addMyIpToKeyVaultNetworkRole
        uses: azure/CLI@v1
        with:
          azcliversion: ${{ env.AZ_CLI_VERSION }}
          inlineScript: |
            SUBSCRIPTION_CODE="${{ github.event.inputs.subscription_code }}"
            ENV_NAME="${{ github.event.inputs.env_name }}"
            APP_CODE="${{ github.event.inputs.app_code }}"

            if [ ${ENV_NAME} = "cmn" ]; then
              KV_RG_NAME="rg-${SUBSCRIPTION_CODE}-${ENV_NAME}-main-kv"
            else
              KV_RG_NAME="rg-${SUBSCRIPTION_CODE}-${ENV_NAME}-${APP_CODE}-kv"
            fi

            MY_IP=$(curl -s https://checkip.amazonaws.com/)
            if [ -z ${MY_IP} ]; then
              echo "Could not get MY_IP"
              exit 1
            fi
            bash ./.github/scripts/add-ip-to-key-vault-network-rule.sh ${MY_IP} ${SUBSCRIPTION_CODE} ${KV_RG_NAME}
            echo "::set-output name=MY_IP::${MY_IP}"

      - name: Deploy Monitoring ARM Template
        uses: azure/CLI@v1
        with:
          azcliversion: ${{ env.AZ_CLI_VERSION }}
          inlineScript: |
            SUBSCRIPTION_CODE="${{ github.event.inputs.subscription_code }}"
            ENV_NAME="${{ github.event.inputs.env_name }}"
            LOCATION="${{ github.event.inputs.location }}"
            APP_CODE="${{ github.event.inputs.app_code }}"

            echo '----------- create monitoring -----------'
            bash ./azure/monitoring/deployments/create-monitoring.sh \
              ${ENV_NAME} \
              ${LOCATION} \
              ${SUBSCRIPTION_CODE} \
              ${APP_CODE}

      - name: Remove My IP From Key Vault Network Role
        if: always()
        uses: azure/CLI@v1
        with:
          azcliversion: ${{ env.AZ_CLI_VERSION }}
          inlineScript: |
            SUBSCRIPTION_CODE="${{ github.event.inputs.subscription_code }}"
            ENV_NAME="${{ github.event.inputs.env_name }}"
            APP_CODE="${{ github.event.inputs.app_code }}"

            if [ ${ENV_NAME} = "cmn" ]; then
              KV_RG_NAME="rg-${SUBSCRIPTION_CODE}-${ENV_NAME}-main-kv"
            else
              KV_RG_NAME="rg-${SUBSCRIPTION_CODE}-${ENV_NAME}-${APP_CODE}-kv"
            fi

            MY_IP="${{ steps.addMyIpToKeyVaultNetworkRole.outputs.MY_IP }}"
            if [ -z ${MY_IP} ]; then
              echo "Could not get MY_IP"
              exit 1
            fi
            bash ./.github/scripts/remove-ip-from-key-vault-network-rule.sh ${MY_IP} ${SUBSCRIPTION_CODE} ${KV_RG_NAME}

      - name: Send Notification to slack
        if: always()
        uses: tokorom/action-slack-incoming-webhook@master
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
            text: "***Deploy Monitor Resources Completed*** [${{ github.repository }}] @ ${{ github.event_name }} "
            attachments: |
              [
                {
                  "author_name": "${{ github.actor }}",
                  "author_icon": "${{ github.event.sender.avatar_url }}",
                  "fields": [
                    {
                      "title": "GitHub Actions URL",
                      "value": "https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]  
